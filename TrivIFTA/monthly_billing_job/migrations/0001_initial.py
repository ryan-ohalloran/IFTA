# Generated by Django 4.2.8 on 2024-06-03 20:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Bill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("period_from", models.DateField()),
                ("period_to", models.DateField()),
                ("total_cost", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "company_id",
                    models.IntegerField(default=0, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("active", models.BooleanField(default=True)),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "street_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                ("state", models.CharField(blank=True, max_length=55, null=True)),
                ("zip_code", models.CharField(blank=True, max_length=10, null=True)),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "contact_phone",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "contact_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("default", "Default"),
                            ("internal", "Internal"),
                            ("sourcewell", "Sourcewell"),
                        ],
                        default="default",
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reseller",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "contact_phone",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "my_admin_username",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "my_admin_password",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "database_name",
                    models.CharField(
                        blank=True, default="default", max_length=255, null=True
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="auth.group"
                    ),
                ),
                (
                    "reseller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="users",
                        to="monthly_billing_job.reseller",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True, related_name="users", to="auth.permission"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("po_number", models.CharField(max_length=50)),
                ("current_status", models.CharField(max_length=100)),
                ("placed_by", models.CharField(max_length=100)),
                ("shipping_address", models.CharField(max_length=250)),
                ("order_date", models.DateTimeField()),
                ("item_cost", models.FloatField()),
                ("shipping_cost", models.FloatField()),
                ("order_total", models.FloatField()),
                ("order_number", models.CharField(max_length=100)),
                ("customer_cost", models.FloatField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="monthly_billing_job.company",
                    ),
                ),
            ],
            options={
                "unique_together": {("po_number", "order_number", "order_date")},
            },
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("serial_no", models.CharField(max_length=100)),
                ("vin", models.CharField(blank=True, max_length=20, null=True)),
                ("database", models.CharField(blank=True, max_length=50, null=True)),
                ("assigned_po", models.CharField(blank=True, max_length=50, null=True)),
                ("bill_days", models.IntegerField()),
                ("billing_days", models.FloatField()),
                ("total_cost", models.FloatField()),
                (
                    "rate_plan_name",
                    models.CharField(
                        blank=True, default="", max_length=1000, null=True
                    ),
                ),
                ("rate_plan_fee", models.FloatField(default=-1.0)),
                ("period_from", models.DateTimeField()),
                ("period_to", models.DateTimeField()),
                ("customer_cost", models.FloatField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contracts",
                        to="monthly_billing_job.company",
                    ),
                ),
            ],
            options={
                "unique_together": {("serial_no", "period_from", "period_to")},
            },
        ),
        migrations.AddField(
            model_name="company",
            name="reseller",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="companies",
                to="monthly_billing_job.reseller",
            ),
        ),
        migrations.CreateModel(
            name="BillItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_cost", models.FloatField()),
                (
                    "bill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bill_items",
                        to="monthly_billing_job.bill",
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monthly_billing_job.contract",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="monthly_billing_job.order",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bill",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bills",
                to="monthly_billing_job.company",
            ),
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("account_id", models.CharField(max_length=255, unique=True)),
                (
                    "users",
                    models.ManyToManyField(
                        related_name="accounts", to="monthly_billing_job.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pricing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("default", "Default"),
                            ("internal", "Internal"),
                            ("sourcewell", "Sourcewell"),
                        ],
                        max_length=10,
                    ),
                ),
                ("markup_rate", models.FloatField()),
                (
                    "reseller",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="pricings",
                        to="monthly_billing_job.reseller",
                    ),
                ),
            ],
            options={
                "unique_together": {("reseller", "company_type")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="company",
            unique_together={("company_id",)},
        ),
    ]
